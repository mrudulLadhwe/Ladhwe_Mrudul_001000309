/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import Business.Customer.CustomerDirectory;
import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Restaurant.Restaurant;
import Business.Restaurant.RestaurantDirectory;
import Business.Role.AdminRole;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.List;
import java.util.regex.Matcher;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mrudu
 */
public class ManageRestaurantJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageRestaurantJPanel
     */
    JPanel userProcessContainer;
    EcoSystem ecosystem;
    String restauName;
    
    public ManageRestaurantJPanel(JPanel userProcessContainer,EcoSystem ecosystem) {
        initComponents();
        
        this.ecosystem = ecosystem;
        this.userProcessContainer = userProcessContainer;
        
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        customerTable = new javax.swing.JTable();
        InsertCustomer = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        createName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        createUsername = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        createPassword = new javax.swing.JTextField();
        Create = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        updateName = new javax.swing.JTextField();
        updateUsername = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        updatePassword = new javax.swing.JTextField();
        Create1 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        updateName1 = new javax.swing.JTextField();
        Delete = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        createMUsername = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        createMPassword = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        updateMUsername = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        updateMPassword = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(234, 232, 232));

        jPanel1.setBackground(new java.awt.Color(97, 94, 94));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Manage Restaurants");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        customerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Restaurant Name", "Manager Name", "Address"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        customerTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                customerTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(customerTable);

        InsertCustomer.setText("Create New Restaurant");

        jLabel2.setText("Restaurant Name:");

        jLabel3.setText("Manager Name:");

        jLabel4.setText("Address :");

        Create.setBackground(new java.awt.Color(51, 51, 51));
        Create.setForeground(new java.awt.Color(255, 255, 255));
        Create.setText("Create");
        Create.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateActionPerformed(evt);
            }
        });

        jLabel5.setText("Update Restaurant Details");

        jLabel11.setText("Address : ");

        Create1.setBackground(new java.awt.Color(51, 51, 51));
        Create1.setForeground(new java.awt.Color(255, 255, 255));
        Create1.setText("Update");
        Create1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Create1ActionPerformed(evt);
            }
        });

        jLabel12.setText("Restaurant Name:");

        Delete.setBackground(new java.awt.Color(51, 51, 51));
        Delete.setForeground(new java.awt.Color(255, 255, 255));
        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        jLabel6.setText("Delete a Restaurant");

        jLabel7.setText("Manager Name:");

        jButton1.setText("<< Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel9.setText("Manager Username:");

        jLabel10.setText("Manager Password:");

        jLabel13.setText("Manager Username:");

        jLabel14.setText("Manager Password:");

        jLabel15.setText("Restaurant Name:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(createMPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(createUsername, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(createName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(97, 97, 97)
                                .addComponent(Create))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(createPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(createMUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 26, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(InsertCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(97, 97, 97)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(Create1))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(71, 71, 71))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel14)
                            .addGap(18, 18, 18)
                            .addComponent(updateMPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(updateName)
                                .addComponent(updatePassword)
                                .addComponent(updateMUsername)
                                .addComponent(updateUsername)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(1, 1, 1)
                            .addComponent(Delete)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateName1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(99, 99, 99))
            .addGroup(layout.createSequentialGroup()
                .addGap(228, 228, 228)
                .addComponent(jScrollPane1)
                .addGap(224, 224, 224))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(updateName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(Delete))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(InsertCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(createName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(createUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(92, 92, 92)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(createPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(createMUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10)
                                    .addComponent(createMPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Create))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(177, 177, 177)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel13)
                                        .addComponent(updateMUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(47, 47, 47)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel14)
                                            .addComponent(updateMPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(updateName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(updateUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(22, 22, 22)
                                .addComponent(updatePassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(85, 85, 85)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Create1)))
                .addContainerGap(96, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void customerTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customerTableMouseClicked
        // TODO add your handling code here:
        int index = customerTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) customerTable.getModel();
        updateName.setText(model.getValueAt(index, 0).toString());
        updateUsername.setText(model.getValueAt(index, 1).toString());
        updatePassword.setText(model.getValueAt(index, 2).toString());
        Employee e = ecosystem.getEmployeeDirectory().searchEmployee(updateUsername.getText());
        
        for(int i = 0; i < ecosystem.getUserAccountDirectory().getUserAccountList().size(); i++){
            if(ecosystem.getUserAccountDirectory().getUserAccountList().get(i).getName().equals(e.getName())){
               updateMUsername.setText(ecosystem.getUserAccountDirectory().getUserAccountList().get(i).getUsername());
               updateMPassword.setText(ecosystem.getUserAccountDirectory().getUserAccountList().get(i).getPassword());
            }
        }
        
        restauName = updateName.getText();
        updateName.setEditable(false);
        updateMUsername.setEditable(false);
    }//GEN-LAST:event_customerTableMouseClicked

    private void CreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateActionPerformed
        // TODO add your handling code here:
        boolean flag = false;
        boolean userNameFlag = false;
        boolean allEmpty = false;
        boolean passwordFlag = false;
        if(!ecosystem.getUserAccountDirectory().checkIfUsernameIsUnique(createMPassword.getText())){
            flag = true;
            userNameFlag = true;
            JOptionPane.showMessageDialog(null, "Username already exists");
        }
        
        if((createName.getText().isEmpty() || createUsername.getText().isEmpty() || createPassword.getText().isEmpty()
                || createMUsername.getText().isEmpty() || createMPassword.getText().isEmpty()) && userNameFlag == false){
            flag = true;
            allEmpty = true;
            JOptionPane.showMessageDialog(null, "Please enter all fields");
        }
        
        if((!createMPassword.getText().isEmpty()) && createMPassword.getText().length() < 8 && userNameFlag == false && allEmpty == false){
            flag = true;
            passwordFlag = true;
            JOptionPane.showMessageDialog(null, "Password length should be greater than 8");
        }
        
        String pattern = "^[A-Za-z]+$";
        java.util.regex.Pattern r = java.util.regex.Pattern.compile(pattern);
        Matcher m = r.matcher(createName.getText());
        Matcher m1 = r.matcher(createUsername.getText());
        if (((!m.find()) || (!m1.find())) && ((!createName.getText().isEmpty()) && (!createUsername.getText().isEmpty()) 
            && (!createPassword.getText().isEmpty()) && (!createMUsername.getText().isEmpty()) && (!createMPassword.getText().isEmpty()) && passwordFlag == false)) {
            flag = true;
            JOptionPane.showMessageDialog(null, "Please enter Valid data");
        }
        
        if(flag == false){
        
        Employee emp1 = ecosystem.getEmployeeDirectory().createEmployee(createUsername.getText());
        UserAccount resManager1 = ecosystem.getUserAccountDirectory().createUserAccount(createMUsername.getText(), createMPassword.getText(), emp1, new AdminRole());
        resManager1.setName(emp1.getName());
        ecosystem.getRestaurantDirectory().createNewRestaurant(emp1, createName.getText(), createPassword.getText());

        DefaultTableModel model = (DefaultTableModel) customerTable.getModel();
        model.addRow(new Object[]{
            createName.getText(),
            createUsername.getText(),
            createPassword.getText()
        });
        
        JOptionPane.showMessageDialog(null, "Restaurant Created!!");

        createName.setText("");
        createUsername.setText("");
        createPassword.setText("");
        createMUsername.setText("");
        createMPassword.setText("");
        
        flag = false;
        userNameFlag = false;
        allEmpty = false;
        passwordFlag = false;
        }
    }//GEN-LAST:event_CreateActionPerformed

    private void Create1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Create1ActionPerformed
        // TODO add your handling code here:
        boolean flag = false;
        boolean allEmpty = false;
        boolean passwordFlag = false;
        
        if((updateName.getText().isEmpty() || updateUsername.getText().isEmpty() || updatePassword.getText().isEmpty()
                || updateMUsername.getText().isEmpty() || updateMUsername.getText().isEmpty())){
            flag = true;
            allEmpty = true;
            JOptionPane.showMessageDialog(null, "Please enter all fields");
        }
        
        if((!updateMPassword.getText().isEmpty()) && updateMPassword.getText().length() < 8 && allEmpty == false){
            flag = true;
            passwordFlag = true;
            JOptionPane.showMessageDialog(null, "Password length should be greater than 8");
        }
        
        String pattern = "^[A-Za-z]+$";
        java.util.regex.Pattern r = java.util.regex.Pattern.compile(pattern);
        Matcher m = r.matcher(updateUsername.getText());
        if (((!m.find())) && ((!updateName.getText().isEmpty()) && (!updateUsername.getText().isEmpty()) 
            && (!updatePassword.getText().isEmpty()) && (!updateMUsername.getText().isEmpty()) && (!updateMPassword.getText().isEmpty()) && passwordFlag == false)) {
            flag = true;
            JOptionPane.showMessageDialog(null, "Please enter Valid data");
        }
        
        if(flag == false){
        List<Restaurant> rlist = ecosystem.getRestaurantDirectory().getRestaurantList();

        for(int i = 0; i < rlist.size(); i++){
            if(rlist.get(i).getRestaurentName().equals(restauName)){
                rlist.get(i).setRestaurentName(updateName.getText());
                rlist.get(i).getRestaurantManager().setName(updateUsername.getText());
                rlist.get(i).setAddress(updatePassword.getText());
            }
        }

        List<UserAccount> uList = ecosystem.getUserAccountDirectory().getUserAccountList();
        System.out.println("size>>>>>>"+ uList.size());
        for(int i = 0; i < uList.size(); i++){
            System.out.println(">>>>>>"+uList.get(i).getName()+">>>"+i);
            if(uList.get(i).getUsername().equals(updateMUsername.getText())){
                uList.get(i).setName(updateUsername.getText());
                uList.get(i).setUsername(updateMUsername.getText());
                uList.get(i).setPassword(updateMPassword.getText());
            }
        }

        int index = customerTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) customerTable.getModel();

        if(index >= 0){
            model.setValueAt(updateName.getText(), index, 0);
            model.setValueAt(updateUsername.getText(), index, 1);
            model.setValueAt(updatePassword.getText(), index, 2);
            JOptionPane.showMessageDialog(null, "Restaurant Updated!!");
            
            updateName.setText("");
            updateUsername.setText("");
            updatePassword.setText("");
            updateMUsername.setText("");
            updateMPassword.setText("");
            
            flag = false;
            allEmpty = false;
            passwordFlag = false;
        }else{
            JOptionPane.showMessageDialog(null, "Error");
        }
        }
    }//GEN-LAST:event_Create1ActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) customerTable.getModel();
        String deleteRestaurant = updateName1.getText();
        boolean flag = false;
        int row = 0;

        List<Restaurant> rlist = ecosystem.getRestaurantDirectory().getRestaurantList();

        for(int i = 0; i < rlist.size(); i++){
            if(rlist.get(i).getRestaurentName().equals(deleteRestaurant)){
                row = i;
                rlist.remove(i);
                flag = true;
            }
        }

        if(flag == false){
            JOptionPane.showMessageDialog(null, "Invalid User");
        }

        if(flag == true){
            model.removeRow(row);
            JOptionPane.showMessageDialog(null, "Restaurant deleted!!");
            updateName1.setText("");
        }

    }//GEN-LAST:event_DeleteActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
         Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SystemAdminWorkAreaJPanel sysAdminwjp = (SystemAdminWorkAreaJPanel) component;
        sysAdminwjp.populateTree();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Create;
    private javax.swing.JButton Create1;
    private javax.swing.JButton Delete;
    private javax.swing.JLabel InsertCustomer;
    private javax.swing.JTextField createMPassword;
    private javax.swing.JTextField createMUsername;
    private javax.swing.JTextField createName;
    private javax.swing.JTextField createPassword;
    private javax.swing.JTextField createUsername;
    private javax.swing.JTable customerTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField updateMPassword;
    private javax.swing.JTextField updateMUsername;
    private javax.swing.JTextField updateName;
    private javax.swing.JTextField updateName1;
    private javax.swing.JTextField updatePassword;
    private javax.swing.JTextField updateUsername;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) customerTable.getModel();
        RestaurantDirectory rd = ecosystem.getRestaurantDirectory();

        model.setRowCount(0);
        for(int i = 0; i < rd.getRestaurantList().size(); i++){
            model.addRow(new Object[]{
            rd.getRestaurantList().get(i).getRestaurentName(),
            rd.getRestaurantList().get(i).getRestaurantManager().getName(),
            rd.getRestaurantList().get(i).getAddress()
            });
        } 
    }
}
